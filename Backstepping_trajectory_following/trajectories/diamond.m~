function [desired_state] = diamond(t, qn)
% DIAMOND trajectory generator for a diamond

% =================== Your code goes here ===================
% You have to set the pos, vel, acc, yaw and yawdot variables
% NOTE: the simulator will spawn the robot to be at the
%       position you return for t == 0
tf = t;
tfunc = ((1/2700)*tf^3 + (-1/54000)*tf^4  + (1/4050000)*tf^5);
tv = ((1/2700)*3*tf^2 + (-1/54000)*4*tf^3  + (1/4050000)*5*tf^4);
ta = ((1/2700)*6*tf + (-1/54000)*12*tf^2  + (1/4050000)*20*tf^3);

if t == 0
    pos = [0;0;0];
elseif t < 7.5 && t>0
    pos = [0+((1/4)-0)*tfunc; 0+(1.414-0)*tfunc ; 0+(1.414-0)*tfunc];
    vel = [((1/4)-0)*tv; (1.414-0)*tv ; (1.414-0)*tv];
elseif t < 15 && t>=7.5
     pos = [1/4+((1/2)-(1/4))*tfunc; 1.414+(0-1.414)*tfunc ; 1.414+(2.828-1.414)*tfunc];
elseif t < 22.5 && t>=15
     pos = [1/2+((3/4)-(1/2))*tfunc; 0+(-1.414-0)*tfunc ; 2.828+(1.414-2.828)*tfunc];
else 
     pos = [3/4+((1)-(3/4))*tfunc; -1.414+(0-(-1.414))*tfunc ; 1.414+(0-1.414)*tfunc];
end
%pos = [0; 0; 0];
vel = [0; 0; 0];
acc = [0; 0; 0];
yaw = 0;
yawdot = 0;

% =================== Your code ends here ===================

desired_state.pos = pos(:);
desired_state.vel = vel(:);
desired_state.acc = acc(:);
desired_state.yaw = yaw;
desired_state.yawdot = yawdot;

end
